# Configuration file
# key = value

# Configuration file
# key = value

# Build

#quarkus.container-image.build=true
#quarkus.container-image.push=true
#quarkus.native.container-build=true
#quarkus.jib.base-native-image=quay.io/quarkus/ubi-quarkus-native-image:20.0.0-java11
#quarkus.container-image.group=jeremydavis
#quarkus.container-image.name=quarkus-cafe-core
#quarkus.container-image.tag=0.3

# HTTP Port
%dev.quarkus.http.port=8081

# Logging
#quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
quarkus.log.console.format=%-5p [%c{2.}] (%t) %s%e%n
quarkus.log.level=INFO
quarkus.log.category."com.redhat.quarkus.cafe".level=DEBUG
quarkus.log.category."org.apache.kafka".level=FATAL
quarkus.log.category."org.testcontainers".level=FATAL

# Datasource
%dev.quarkus.mongodb.database = cafedb
%dev.quarkus.mongodb.connection-string = mongodb://cafe-user:redhat-20@localhost:27017/cafedb

%test.quarkus.mongodb.database = cafedb
%test.quarkus.mongodb.connection-string = mongodb://cafe-user:redhat-20@localhost:27017/cafedb

%prod.quarkus.mongodb.database = ${MONGO_DB}
%prod.quarkus.mongodb.connection-string = ${MONGO_URL}
%prod.quarkus.mongodb."mongo-client-configs".tls=true
%prod.quarkus.mongodb.credentials.username=${MONGO_USERNAME}
%prod.quarkus.mongodb.credentials.password=${MONGO_PASSWORD}

# Kafka/Reactive Messaging

### Incoming

#### Orders Up
%dev.mp.messaging.incoming.orders-up.connector=smallrye-kafka
%dev.mp.messaging.incoming.orders-up.bootstrap.servers=localhost:9092
%dev.mp.messaging.incoming.orders-up.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
%dev.mp.messaging.incoming.orders-up.topic=orders

%test.mp.messaging.incoming.orders-up.connector=smallrye-kafka
%test.mp.messaging.incoming.orders-up.bootstrap.servers=${KAFKA_BOOTSTRAP_URLS}
%test.mp.messaging.incoming.orders-up.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
%test.mp.messaging.incoming.orders-up.topic=orders

%prod.mp.messaging.incoming.orders-up.connector=smallrye-kafka
%prod.mp.messaging.incoming.orders-up.bootstrap.servers=${KAFKA_BOOTSTRAP_URLS}
%prod.mp.messaging.incoming.orders-up.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
%prod.mp.messaging.incoming.orders-up.topic=orders

#### Web-in
%dev.mp.messaging.incoming.web-in.connector=smallrye-kafka
%dev.mp.messaging.incoming.web-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
%dev.mp.messaging.incoming.web-in.topic=web-in

%test.mp.messaging.incoming.web-in.bootstrap.servers=${KAFKA_BOOTSTRAP_URLS}
%test.mp.messaging.incoming.web-in.connector=smallrye-kafka
%test.mp.messaging.incoming.web-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
%test.mp.messaging.incoming.web-in.topic=web-in

%prod.mp.messaging.incoming.web-in.connector=smallrye-kafka
%prod.mp.messaging.incoming.web-in.bootstrap.servers=${KAFKA_BOOTSTRAP_URLS}
%prod.mp.messaging.incoming.web-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
%prod.mp.messaging.incoming.web-in.topic=web-in

### Outgoing

#### Orders
%dev.mp.messaging.outgoing.orders-out.connector=smallrye-kafka
%dev.mp.messaging.outgoing.orders-out.bootstrap.servers=localhost:9092
%dev.mp.messaging.outgoing.orders-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
%dev.mp.messaging.outgoing.orders-out.topic=orders

%test.mp.messaging.outgoing.orders-out.connector=smallrye-kafka
%test.mp.messaging.outgoing.orders-out.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
%test.mp.messaging.outgoing.orders-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
%test.mp.messaging.outgoing.orders-out.topic=orders-test
%test.mp.messaging.outgoing.orders-out.bootstrap.servers=${KAFKA_BOOTSTRAP_URLS}

%prod.mp.messaging.outgoing.orders-out.connector=smallrye-kafka
%prod.mp.messaging.outgoing.orders-out.bootstrap.servers=${KAFKA_BOOTSTRAP_URLS}
%prod.mp.messaging.outgoing.orders-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
%prod.mp.messaging.outgoing.orders-out.topic=orders

#### Barista
%dev.mp.messaging.outgoing.barista-out.connector=smallrye-kafka
%dev.mp.messaging.outgoing.barista-out.bootstrap.servers=localhost:9092
%dev.mp.messaging.outgoing.barista-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
%dev.mp.messaging.outgoing.barista-out.topic=barista-in
%dev.mp.messaging.outgoing.barista-out.group.id=core-group

%test.mp.messaging.outgoing.barista-out.connector=smallrye-kafka
%test.mp.messaging.outgoing.barista-out.bootstrap.servers=${KAFKA_BOOTSTRAP_URLS}
%test.mp.messaging.outgoing.barista-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
%test.mp.messaging.outgoing.barista-out.topic=barista-in
%test.mp.messaging.outgoing.barista-out.group.id=core-group

%prod.mp.messaging.outgoing.barista-out.connector=smallrye-kafka
%prod.mp.messaging.outgoing.barista-out.bootstrap.servers=${KAFKA_BOOTSTRAP_URLS}
%prod.mp.messaging.outgoing.barista-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
%prod.mp.messaging.outgoing.barista-out.topic=barista-in
%prod.mp.messaging.outgoing.barista-out.group.id=core-group

#### Kitchen
%dev.mp.messaging.outgoing.kitchen-out.connector=smallrye-kafka
%dev.mp.messaging.outgoing.kitchen-out.bootstrap.servers=localhost:9092
%dev.mp.messaging.outgoing.kitchen-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
%dev.mp.messaging.outgoing.kitchen-out.topic=kitchen-in

%test.mp.messaging.outgoing.kitchen-out.bootstrap.servers=${KAFKA_BOOTSTRAP_URLS}
%test.mp.messaging.outgoing.kitchen-out.connector=smallrye-kafka
%test.mp.messaging.outgoing.kitchen-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
%test.mp.messaging.outgoing.kitchen-out.topic=kitchen-in

%prod.mp.messaging.outgoing.kitchen-out.connector=smallrye-kafka
%prod.mp.messaging.outgoing.kitchen-out.bootstrap.servers=${KAFKA_BOOTSTRAP_URLS}
%prod.mp.messaging.outgoing.kitchen-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
%prod.mp.messaging.outgoing.kitchen-out.topic=kitchen-in

# There are 2 configurations for the outgoing web-updates topic to handle the 2 different consumers
#### Web Updates

%dev.mp.messaging.outgoing.web-updates-out.connector=smallrye-kafka
%dev.mp.messaging.outgoing.web-updates-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
%dev.mp.messaging.outgoing.web-updates-out.bootstrap.servers=localhost:9092
%dev.mp.messaging.outgoing.web-updates-out.topic=web-updates

%test.mp.messaging.outgoing.web-updates-out.connector=smallrye-kafka
%test.mp.messaging.outgoing.web-updates-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
%test.mp.messaging.outgoing.web-updates-out.bootstrap.servers=${KAFKA_BOOTSTRAP_URLS}
%test.mp.messaging.outgoing.web-updates-out.topic=web-updates

%prod.mp.messaging.outgoing.web-updates-out.connector=smallrye-kafka
%prod.mp.messaging.outgoing.web-updates-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
%prod.mp.messaging.outgoing.web-updates-out.bootstrap.servers=${KAFKA_BOOTSTRAP_URLS}
%prod.mp.messaging.outgoing.web-updates-out.topic=web-updates

#### Web Out
%dev.mp.messaging.outgoing.web-updates-order-up.connector=smallrye-kafka
%dev.mp.messaging.outgoing.web-updates-order-up.value.serializer=org.apache.kafka.common.serialization.StringSerializer
%dev.mp.messaging.outgoing.web-updates-order-up.bootstrap.servers=localhost:9092
%dev.mp.messaging.outgoing.web-updates-order-up.topic=web-updates

%test.mp.messaging.outgoing.web-updates-order-up.connector=smallrye-kafka
%test.mp.messaging.outgoing.web-updates-order-up.value.serializer=org.apache.kafka.common.serialization.StringSerializer
%test.mp.messaging.outgoing.web-updates-order-up.bootstrap.servers=${KAFKA_BOOTSTRAP_URLS}
%test.mp.messaging.outgoing.web-updates-order-up.topic=web-updates

%prod.mp.messaging.outgoing.web-updates-order-up.connector=smallrye-kafka
%prod.mp.messaging.outgoing.web-updates-order-up.value.serializer=org.apache.kafka.common.serialization.StringSerializer
%prod.mp.messaging.outgoing.web-updates-order-up.bootstrap.servers=${KAFKA_BOOTSTRAP_URLS}
%prod.mp.messaging.outgoing.web-updates-order-up.topic=web-updates
