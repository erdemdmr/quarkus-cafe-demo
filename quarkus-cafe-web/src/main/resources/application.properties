# Quarkus-Cafe-Web

# Configuration file
# key = value

# Builds

# HTTP
quarkus.http.cors=true
%dev.quarkus.http.cors.origins=http://localhost
quarkus.http.cors.origins=${CORS_ORIGINS}
quarkus.http.cors.methods=GET,PUT,POST
quarkus.http.cors.headers=X-Custom
quarkus.http.cors.exposed-headers=Content-Disposition
quarkus.http.cors.access-control-max-age=24H

## Ports
%dev.quarkus.http.port=8080

## Logging
quarkus.log.level=INFO
quarkus.log.category."com.redhat.quarkus.cafe".level=DEBUG
quarkus.log.category."org.apache.kafka".level=ERROR

# REST CLIENT
%dev.com.redhat.quarkus.cafe.web.infrastructure.OrderService/mp-rest/url=http://localhost:8083
%dev.com.redhat.quarkus.cafe.web.infrastructure.OrderService/mp-rest/scope=javax.inject.Singleton

com.redhat.quarkus.cafe.web.infrastructure.OrderService/mp-rest/url=http://core-cafe.apps.ocp4.home.ocpcloud.com
com.redhat.quarkus.cafe.web.infrastructure.OrderServicee/mp-rest/scope=javax.inject.Singleton

# Kafka

## Outgoing

%dev.mp.messaging.outgoing.orders-out.connector=smallrye-kafka
%dev.mp.messaging.outgoing.orders-out.bootstrap.servers=localhost:9092
%dev.mp.messaging.outgoing.orders-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
%dev.mp.messaging.outgoing.orders-out.topic=web-in

mp.messaging.outgoing.orders-out.connector=smallrye-kafka
mp.messaging.outgoing.orders-out.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVERS}
mp.messaging.outgoing.orders-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.orders-out.topic=web-in

%dev.mp.messaging.outgoing.web-updates-out.connector=smallrye-kafka
%dev.mp.messaging.outgoing.web-updates-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
%dev.mp.messaging.outgoing.web-updates-out.bootstrap.servers=localhost:9092
#%dev.mp.messaging.outgoing.web-updates-out.value.serializer=io.quarkus.kafka.client.serialization.JsonbSerializer
%dev.mp.messaging.outgoing.web-updates-out.topic=web-updates

mp.messaging.outgoing.web-updates-out.connector=smallrye-kafka
mp.messaging.outgoing.web-updates-out.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVERS}
mp.messaging.outgoing.web-updates-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.web-updates-out.topic=web-updates


### Incoming

%dev.mp.messaging.incoming.web-updates.connector=smallrye-kafka
%dev.mp.messaging.incoming.web-updates.bootstrap.servers=localhost:9092
%dev.mp.messaging.incoming.web-updates.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
%dev.mp.messaging.incoming.web-updates.broadcast=true
%dev.mp.messaging.incoming.web-updates.topic=web-updates


mp.messaging.incoming.web-updates.connector=smallrye-kafka
mp.messaging.incoming.web-updates.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVERS}
mp.messaging.incoming.web-updates.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.web-updates.broadcast=true
mp.messaging.incoming.web-updates.topic=web-updates

#### Topic beverage-in
mp.messaging.incoming.barista-in.connector=smallrye-kafka
mp.messaging.incoming.barista-in.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVERS}
mp.messaging.incoming.barista-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
# %prod.mp.messaging.outgoing.barista-in.bootstrap.servers=cafe-cluster-kafka-bootstrap.vsummit-quarkus-cafe.svc:9092,cafe-cluster-kafka-bootstrap.vsummit-quarkus-cafe.svc:9093

%dev.mp.messaging.incoming.barista-in.connector=smallrye-kafka
%dev.mp.messaging.incoming.barista-in.bootstrap.servers=localhost:9092
%dev.mp.messaging.incoming.barista-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
# %dev.mp.messaging.incoming.barista-in.topic=barista-in

#### Topic kitchen-n
%dev.mp.messaging.incoming.kitchen-in.connector=smallrye-kafka
%dev.mp.messaging.incoming.kitchen-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
# %dev.mp.messaging.incoming.kitchen-in.topic=kitchen-in
%dev.mp.messaging.incoming.kitchen-in.bootstrap.servers=localhost:9092

mp.messaging.incoming.kitchen-in.connector=smallrye-kafka
mp.messaging.incoming.kitchen-in.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVERS}
mp.messaging.incoming.kitchen-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

#### Topic orders
%dev.mp.messaging.incoming.orders.connector=smallrye-kafka
%dev.mp.messaging.incoming.orders.bootstrap.servers=localhost:9092
%dev.mp.messaging.incoming.orders.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
# %dev.mp.messaging.incoming.orders-in.topic=orders

mp.messaging.incoming.orders.connector=smallrye-kafka
mp.messaging.incoming.orders.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVERS}
mp.messaging.incoming.orders.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# URL for SSE
%dev.sourceUrl=http://localhost:8080/dashboard/stream
%dev.orderUrl=http://localhost:8080
%test.sourceUrl=http://localhost:8080/dashboard/stream
#%prod.sourceUrl=http://quarkus-cafe-web-quarkus-cafe.apps.cluster-summit-f388.summit-f388.sandbox335.opentlc.com/dashboard/stream
sourceUrl=${STREAM_URL}
orderUrl=${CORS_ORIGINS}